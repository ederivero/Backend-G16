# Generated by Django 5.0.2 on 2024-02-24 01:19

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('gestion', '0002_agrege_columna_en_platos'),
    ]

    operations = [
        migrations.AlterField(
            model_name='ingrediente',
            name='platoId',
            field=models.ForeignKey(db_column='plato_id', on_delete=django.db.models.deletion.PROTECT, related_name='ingredientes', to='gestion.plato'),
        ),
        migrations.AlterField(
            model_name='plato',
            name='tipo',
            field=models.TextField(choices=[('entrada', 'ENTRADA'), ('plato_de_fondo', 'PLATO DE FONDO'), ('postre', 'POSTRE'), ('golosinas', 'GOLOSINA')], default='entrada'),
        ),
        migrations.AlterField(
            model_name='preparacion',
            name='platoId',
            field=models.ForeignKey(db_column='plato_id', on_delete=django.db.models.deletion.PROTECT, related_name='preparaciones', to='gestion.plato'),
        ),
        migrations.CreateModel(
            name='Cheff',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('nombre', models.TextField()),
                ('correo', models.EmailField(max_length=254, unique=True)),
                ('password', models.TextField()),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'cheffs',
            },
        ),
    ]
